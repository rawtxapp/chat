{"version":3,"sources":["App.js","Micro.tsx","ChatBackend.js","registerServiceWorker.js","index.js"],"names":["moniker","Micro","allowance","initialized","canHandleWithMicro","amount","_this","handleWithMicro","invoice","window","postMessage","_this2","this","document","addEventListener","_ref","rawData","data","toLowerCase","startsWith","newAllowance","substring","length","parseInt","localStorage","getItem","generateName","setItem","backend","ChatBackend","Object","classCallCheck","url","path","endpoint","getInvoice","asyncToGenerator","regenerator_default","a","mark","_callee","memo","response","wrap","_context","prev","next","fetch","sent","abrupt","json","stop","_x","apply","arguments","getUri","_callee2","_context2","micro","App","props","possibleConstructorReturn","getPrototypeOf","call","_getUri","uri","setState","_handleAddMessage","_ref2","e","preventDefault","state","message","substr","trim","t0","console","error","init","react_default","createElement","className","messages","map","m","i","key","nickname","settled","withMicro","href","lib_default","value","size","onSubmit","type","onChange","event","target","placeholder","Component","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","catch","ReactDOM","render","src_App_0","getElementById","URL","process","origin","concat","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.9d409add.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport generateName from \"sillyname\";\nimport ChatBackend from \"./ChatBackend\";\nimport QRCode from \"qrcode.react\";\n\nimport \"./App.css\";\nimport Micro from \"./Micro\";\n\nlet moniker;\nif (localStorage && localStorage.getItem(\"chatMoniker\")) {\n  moniker = localStorage.getItem(\"chatMoniker\");\n} else {\n  moniker = generateName();\n  localStorage.setItem(\"chatMoniker\", moniker);\n}\n\nconst backend = new ChatBackend();\nconst micro = new Micro();\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { message: \"\" };\n  }\n\n  componentDidMount() {\n    this._getUri();\n    micro.init();\n  }\n\n  _getUri = async () => {\n    const uri = await backend.getUri();\n    this.setState({ uri });\n  };\n\n  _handleAddMessage = async e => {\n    e.preventDefault();\n    const memo = this.state.message.substr(0, 100);\n    if (memo.trim() == \"\") {\n      return;\n    }\n    let invoice = \"\";\n    try {\n      invoice = await backend.getInvoice(memo);\n    } catch (err) {\n      console.error(err);\n      return;\n    }\n\n    this.setState({ message: \"\" });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"App-container\">\n          <div className=\"App-moniker\">Your nickname is: {moniker}</div>\n          <div className=\"App-messages\">\n            <div>\n              {this.state.messages &&\n                this.state.messages.map((m, i) => (\n                  <p key={i}>\n                    <b>{m.nickname}: </b>\n                    {m.settled ? m.message : <i>Awaiting payment</i>}\n                    {m.nickname == moniker && !m.settled && !m.withMicro ? (\n                      <span>\n                        <br />\n                        <b>Your payment request:</b>\n                        <br />\n                        <a href={\"lightning:\" + m.invoice}>{m.invoice}</a>\n                        <br />\n                        <QRCode value={m.invoice} size={256} />\n                        <br />\n                        <b>The node's address is:</b>\n                        <br />\n                        {this.state.uri}\n                        <br />\n                        <QRCode value={this.state.uri || \"\"} />\n                      </span>\n                    ) : (\n                      \"\"\n                    )}\n                    {m.nickname == moniker && m.withMicro && !m.settled ? (\n                      <span>\n                        <br />\n                        Settling payment with micro\n                      </span>\n                    ) : (\n                      \"\"\n                    )}\n                  </p>\n                ))}\n            </div>\n          </div>\n        </div>\n        <div>\n          <form onSubmit={this._handleAddMessage}>\n            <div className=\"App-message-entry\">\n              <input\n                type=\"text\"\n                value={this.state.message}\n                onChange={event =>\n                  this.setState({ message: event.target.value })\n                }\n                placeholder=\"Message...\"\n              />\n            </div>\n            <div className=\"App-submit-button\">\n              <input type=\"submit\" value=\"Send message\" />\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","export default class Micro {\n  allowance : number = 0;\n  initialized : boolean = false;\n\n  init() {\n    document.addEventListener(\"message\", ({ data: rawData }:any) => {\n      if (!rawData) return;\n      let data = rawData.toLowerCase();\n      const appAllowancePrefix = \"appallowance:\";\n      if (data == \"initmicro\") {\n        this.initialized = true;\n        window.postMessage(\"initmicroack\", \"*\");\n      } else if (data.startsWith(appAllowancePrefix)) {\n        let newAllowance = data.substring(appAllowancePrefix.length);\n        this.allowance = parseInt(newAllowance);\n      }\n    });\n  };\n\n  canHandleWithMicro = (amount: number) => {\n    if (this.initialized && this.allowance > amount) {\n      return true;\n    }\n    return false;\n  };\n\n  handleWithMicro = (invoice: string, amount: number) => {\n    if (this.canHandleWithMicro(amount)) {\n      window.postMessage(\"lightning:\" + invoice, \"*\");\n      return true;\n    }\n    return false;\n  };\n}\n","export default class ChatBackend {\n  constructor() {\n    if (\n      process.env.NODE_ENV &&\n      process.env.NODE_ENV === \"development\" &&\n      false\n    ) {\n      this.endpoint = \"http://localhost:8080\";\n    } else {\n      this.endpoint = \"http://chat-backend.rawtx.com:9090\";\n    }\n  }\n\n  url = path => {\n    return this.endpoint + \"/\" + path;\n  };\n\n  getInvoice = async memo => {\n    const response = await fetch(this.url(\"invoice/\" + memo));\n    return response.json();\n  };\n\n  getUri = async () => {\n    const response = await fetch(this.url(\"pubkey\"));\n    const json = await response.json();\n    return json[\"uri\"];\n  };\n}\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}